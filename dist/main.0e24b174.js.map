{"version":3,"sources":["models/Movie.ts","models/Search.ts","ts/main.ts"],"names":[],"mappings":"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","file":"main.0e24b174.js","sourceRoot":"..","sourcesContent":["export class Movie {\n    id: string; \n    title: string;\n    releaseYear: number; \n    poster: string; \n}; ","//vi testar att göra en modul för vår sökfunktion här \n\n//syftet är att hämta data från vårt OMDB API \n// http://www.omdbapi.com/?apikey=65873bd2 + paramterar \n//http://www.omdbapi.com/?apikey=65873bd2&s=\"Harry+Potter\"  \n//Våra tjänster skall bara ha en sak att göra. \n//Vår main skall agera som klister genom att använda tjänsten,\n// och sedan skapa det som behövs för att applikationen skall bli användbar. \n\n\nimport { Movie } from \"./Movie\"; \nimport { IService } from \"./IService\";\n\nexport class Search implements IService {\n\n    //byt namn på den här funktionen?? eller hur ska man tänka här om vi vill göra en sökning? \n    //här inne utvecklar vi funktionen och det som ska hända\n    async getData(): Promise<Movie[]> {\n        \n        //hämta input-värde \n        //lägg till i sökvariabel \n        let searchValue: string = (<HTMLInputElement>document.getElementById(\"user-search\")).value;\n\n        //vår fetch sparas i en variabel\n        let moviefetch = await fetch(\"http://www.omdbapi.com/?apikey=65873bd2&s=\" + searchValue); \n        //vi sparar det hämtade resultatet i datatypen any i en variabel moviedata\n        let moviedata: any = await moviefetch.json(); \n\n        //vi använder map-loopen för vår dataarray,\n        let movies: Movie[] = moviedata.Search.map( (m: any)=> {\n\n            //för varje objekt m, skapa ett nytt objekt enligt movie-klassen: \n            let newMovie: Movie = new Movie(); \n            newMovie.id = m.imdbID; \n            newMovie.title = m.Title;\n            newMovie.releaseYear = m.Year; \n            newMovie.poster = m.Poster;  \n\n            //vi skickar tillbaka objektet i slutet av loopen\n            return newMovie; \n        }); \n\n        //vi skickar tillbaka hela movies-objektet \n        (<HTMLInputElement>document.getElementById(\"user-search\")).value = \"\";\n        return movies; \n    }\n}","import {Movie} from \"../models/Movie\";\nimport {IService} from \"../models/IService\";\nimport {Service} from \"../models/Service\";\nimport {Search} from \"../models/Search\";\n// import {MockService} from \"../models/MockService\"; \n\n\n//för att köra igång applikationen \nwindow.onload = function() {\n\n    //lyssna efter sökning, om sökning görs: \n    document.getElementById(\"searchButton\").addEventListener(\"click\", ()=> {\n\n    //vi skapar upp en instans av Service, servide är det som implementerar interafcet \n    //instansen blir av typen IDataService \n    let service: IService = new Search(); \n    let main: Main = new Main(); \n    //här kör vi funktionen i main-klassen!\n    main.start(service); \n\n    })\n\n}\n\n\n//vi definierar klassen main\n//här inne kör vi funktionen getData(), som hämtar data från APIt. Här behöver vi plocka upp datan! \nclass Main {\n\n    async start(service: IService) {\n        console.log(\"Starting operation\"); \n\n        let movieList: Movie[] = await service.getData(); \n        console.log(movieList); \n        //hit funkar det! \n        //problemet nu är att den inte vet vad den ska göra när den returnerar 0 \n        //för varje objekt i listan vill vi ersätta de gamla divvarna!\n        movieList.forEach(mObject => {\n\n            let container = document.getElementById(\"movie-container\");\n            let newText = document.createElement(\"div\");\n            newText.setAttribute(\"class\", \"movielist\"); \n            container.appendChild(newText);\n         \n            let movietitle = document.createElement(\"h2\"); \n            movietitle.innerHTML = mObject.title; \n            newText.appendChild(movietitle); \n\n\n            let movieYear = document.createElement(\"p\"); \n            movieYear.innerHTML = \"It was released: \" + mObject.releaseYear; \n            newText.appendChild(movieYear); \n\n            let poster = document.createElement(\"img\"); \n            poster.src = mObject.poster; \n            newText.appendChild(poster); \n\n        });\n\n    }\n\n}\n\n// class SearchC {\n\n//     //sökfunktionen? \n//     async search(service: IService) {\n\n//         let movieList: Movie[] = await service.getData(); \n//         console.log(movieList); \n//         //hit funkar det! \n//         //problemet nu är att den inte vet vad den ska göra när den returnerar 0 \n//         //för varje objekt i listan vill vi ersätta de gamla divvarna!\n//         movieList.forEach(mObject => {\n\n//             let container = document.getElementById(\"movie-container\");\n//             let newText = document.createElement(\"div\");\n//             newText.setAttribute(\"class\", \"movielist\"); \n//             container.appendChild(newText);\n         \n//             let movietitle = document.createElement(\"h2\"); \n//             movietitle.innerHTML = mObject.title; \n//             newText.appendChild(movietitle); \n\n\n//             let movieYear = document.createElement(\"p\"); \n//             movieYear.innerHTML = \"It was released: \" + mObject.releaseYear; \n//             newText.appendChild(movieYear); \n\n//             let poster = document.createElement(\"img\"); \n//             poster.src = mObject.poster; \n//             newText.appendChild(poster); \n\n//         });\n\n//     }\n\n// }\n\n"]}